#include <iostream>
using namespace std;

int main()
{


    /**
     * C++指针的算数运算
     * 指针是一个用数值表示的地址，您可以对指针执行算数运算。可以对指针进行4种算数运算：++、--、+、-
     * 
     * 通常用指针代替数组，因为变量指针可以递增，但是数组不可以。在对指针进行算数运算时，必须是连续的内存地址的集合，如数组，否则的话
     * 指针的算术运算则没有意义。
     * 
     * 如ptr++，执行运算之后，ptr将指向下一个内存位置，跨越的内存长度为数据类型所占的字节数。如int为4个字节等。。。
     * 
     */
    int arr[3] = {1, 2, 3};
    int *ptr = arr;

    ptr++;
    cout << *ptr << endl;   //此时输出数组第二个存储位置的元素，也就是元素2，递减也是如此，但是要注意数组越界问题

    /**
     * 指针的比较
     * 指针可以用关系运算符进行比较，如==、>和< 。如果p1和p2指向两个相关的变量，比如同一个数组的不同元素，则可以对p1和p2进行大小比较
     * 
     */
    int arr2[5] = {1,2,3,4,5};
    int *ptr2 = &arr2[3];

    if(ptr > &arr2[3])
    {
        cout << "大于" << ptr << &arr2[3] << endl;
    } else {

        cout << "小于" << endl;
    }





}